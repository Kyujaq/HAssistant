{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Vision Intake Result",
  "description": "Schema for vision intake module output when processing grocery images",
  "type": "object",
  "required": ["status", "image_path", "timestamp", "barcodes", "ocr_text", "items"],
  "properties": {
    "status": {
      "type": "string",
      "enum": ["success", "error"],
      "description": "Processing status"
    },
    "image_path": {
      "type": "string",
      "description": "Path to the processed image"
    },
    "timestamp": {
      "type": "string",
      "format": "date-time",
      "description": "ISO 8601 timestamp of when processing occurred"
    },
    "barcodes": {
      "type": "array",
      "description": "List of detected barcodes",
      "items": {
        "type": "object",
        "required": ["data", "type", "bbox", "confidence"],
        "properties": {
          "data": {
            "type": "string",
            "description": "Decoded barcode data"
          },
          "type": {
            "type": "string",
            "description": "Barcode type (e.g., EAN13, UPCA, QRCODE)"
          },
          "bbox": {
            "type": "object",
            "required": ["x", "y", "width", "height"],
            "properties": {
              "x": {
                "type": "integer",
                "description": "X coordinate of barcode bounding box"
              },
              "y": {
                "type": "integer",
                "description": "Y coordinate of barcode bounding box"
              },
              "width": {
                "type": "integer",
                "description": "Width of barcode bounding box"
              },
              "height": {
                "type": "integer",
                "description": "Height of barcode bounding box"
              }
            }
          },
          "confidence": {
            "type": "number",
            "minimum": 0.0,
            "maximum": 1.0,
            "description": "Confidence score for barcode detection"
          }
        }
      }
    },
    "ocr_text": {
      "type": "string",
      "description": "Full text extracted via OCR"
    },
    "items": {
      "type": "array",
      "description": "Parsed product items",
      "items": {
        "type": "object",
        "required": ["name", "confidence", "needs_review", "raw_text"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "quantity": {
            "type": ["string", "null"],
            "description": "Product quantity (e.g., '2kg', '500ml', '12 pack')"
          },
          "expiry_date": {
            "type": ["string", "null"],
            "description": "Expiry date in original format from image"
          },
          "price": {
            "type": ["string", "null"],
            "description": "Product price"
          },
          "barcode": {
            "type": ["string", "null"],
            "description": "Associated barcode data"
          },
          "confidence": {
            "type": "number",
            "minimum": 0.0,
            "maximum": 1.0,
            "description": "Confidence score for parsed item"
          },
          "needs_review": {
            "type": "boolean",
            "description": "Whether item needs manual review (confidence < 0.7)"
          },
          "raw_text": {
            "type": "string",
            "description": "Original OCR text line for this item"
          }
        }
      }
    },
    "error": {
      "type": ["string", "null"],
      "description": "Error message if status is 'error'"
    }
  }
}
