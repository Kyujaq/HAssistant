
# Loads default set of integrations. Do not remove.
default_config:

# Load frontend themes from the themes folder
frontend:
  themes: !include_dir_merge_named themes

automation: !include automations.yaml
script: !include scripts.yaml
scene: !include scenes.yaml

homeassistant:
  packages: !include_dir_named packages
  internal_url: http://hassistant-homeassistant:8123
  external_url: https://hassistant-v2.tail838fb6.ts.net

http:
  use_x_forwarded_for: true
  trusted_proxies:
    - 127.0.0.1
    - 172.18.0.1
    - 172.21.0.1

# Letta Bridge REST Commands
rest_command:
  letta_add_memory:
    url: "http://letta-bridge:8010/memory/add"
    method: POST
    headers:
      x-api-key: "d6DkfuU7zPOpcoeAVabiNNPhTH6TcFrZ"
      content-type: "application/json"
    payload: >
      {
        "type": "{{ type|default('event') }}",
        "title": "{{ title }}",
        "content": "{{ content }}",
        "tags": {{ tags|default([]) | tojson }},
        "source": {{ source|default([]) | tojson }},
        "confidence": {{ confidence|default(0.7) }},
        "tier": "{{ tier|default('short') }}",
        "pin": {{ pin|default(false) | tojson }},
        "generate_embedding": {{ generate_embedding|default(true) | tojson }}
      }

  letta_memory_maintenance:
    url: "http://letta-bridge:8010/memory/maintenance"
    method: POST
    headers:
      x-api-key: "d6DkfuU7zPOpcoeAVabiNNPhTH6TcFrZ"
      content-type: "application/json"

  # glados_add_inventory_item:
  #   url: "http://hassistant-kitchen-api:8083/inventory/items"
  #   method: POST
  #   headers:
  #     content-type: "application/json"
  #   payload: >
  #     {
  #       "name": "{{ item_name }}",
  #       "unit": "{{ unit }}",
  #       "quantity": {{ quantity | default(1) }},
  #       "purchase_date": "{{ purchase_date | default(now().date()) }}",
  #       "location": "{{ states('input_select.food_storage') }}",
  #       "notes": {{ notes | default('') | tojson }}
  #     }
  # NOTE: Kitchen API not available in v2

# Letta Bridge Sensors
# sensor:
#   - platform: rest
#     name: letta_daily_brief
#     resource: "http://letta-bridge:8010/daily_brief"
#     method: GET
#     headers:
#       x-api-key: "d6DkfuU7zPOpcoeAVabiNNPhTH6TcFrZ"
#     scan_interval: 900
#     value_template: "{{ value_json.items | length if value_json.items is defined else 0 }}"
#     json_attributes:
#       - since
#       - items
# NOTE: daily_brief endpoint not implemented in v2 yet

# Input text helper for duplicate calendar event detection
input_text:
  last_calendar_event:
    name: Last Created Calendar Event
    max: 255
    initial: ""

# Note: OpenAI Conversation must be configured via UI in Settings > Integrations
# Configure it to use: http://hassistant-glados-orchestrator:8082/v1 with model "glados"

logger:
  default: info
  logs:
    homeassistant.components.assist_pipeline: debug
    homeassistant.components.conversation: debug

# rest:
#   - resource: http://hassistant-kitchen-api:8083/inventory/current
#     scan_interval: 300
#     sensor:
#       - name: "Kitchen Inventory"
#         value_template: "{{ value_json | length }}"
#         json_attributes:
#           - "data"
# NOTE: Kitchen API not available in v2

lovelace:
  dashboards:
    memory-dashboard:
      mode: yaml
      filename: memory-view.yaml
      title: Memory
      icon: mdi:database
      show_in_sidebar: true
    speech-dashboard:
      mode: yaml
      filename: speech-view.yaml
      title: Speech
      icon: mdi:account-voice
      show_in_sidebar: true
    inventory-dashboard:
      mode: yaml
      filename: inventory-view.yaml
      title: Inventory
      icon: mdi:fridge
      show_in_sidebar: true
    today-dashboard:
      mode: yaml
      filename: today-view.yaml
      title: Today
      icon: mdi:calendar-today
      show_in_sidebar: true
    night-crew-dashboard:
      mode: yaml
      filename: night-crew-view.yaml
      title: Night Crew
      icon: mdi:weather-night
      show_in_sidebar: true
    vision-signals-dashboard:
      mode: yaml
      filename: vision-signals-view.yaml
      title: Vision Signals
      icon: mdi:eye
      show_in_sidebar: true
    system-health-dashboard:
      mode: yaml
      filename: system-health-view.yaml
      title: System Health
      icon: mdi:stethoscope
      show_in_sidebar: true


# Vision cameras from K80 VM - MUST be added via UI (YAML not supported)
# To add cameras:
# 1. Settings → Devices & Services → Add Integration → MJPEG Camera
# 2. Add "Vision Screen Stream": http://192.168.122.71:8051/mjpeg/screen
# 3. Add "Vision Realworld Stream": http://192.168.122.71:8052/mjpeg/cam


# configuration.yaml (or whichever package you use)
shell_command:
  start_rtsp_streams: >-
    ssh -i /config/ssh_keys/id_ed25519 -o StrictHostKeyChecking=no qjaq@192.168.2.13
    "cd ~/HAssistant && HOST_IP=192.168.2.13 SCREEN_CAPTURE_DEVICE=/dev/video2
    SCREEN_CAPTURE_INPUT_FORMAT=mjpeg v2/scripts/start_streams.sh"
  stop_rtsp_streams: >-
    ssh -i /config/ssh_keys/id_ed25519 -o StrictHostKeyChecking=no qjaq@192.168.2.13
    'pkill -f ffmpeg || true'
